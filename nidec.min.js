class Service{base_url="http://172.30.1.9:8200/";service;constructor(e){this.service=e}async get(e){let t=await fetch(this.base_url+this.service+e),n=await t.json();return n||null}async getQuery(e,t){let n=await fetch(this.base_url+this.service+e+`?query_raw=${t}`),r=await n.json();return r||null}async getQueryWithKey(e,t,n){let r=await fetch(this.base_url+this.service+e+`?query_key=${t}&query_raw=${n}`),s=await r.json();return s||null}async postQuery(e,t,n){let r=await fetch(this.base_url+this.service+e,{method:"POST",headers:t,body:n}),s=await r.json();return s||null}handleError(e){console.error(err)}}class Paperless{base_url="http://172.30.1.9:8200/";service="api/";url="paperless/";constructor(){this.service="api/paperless/"}async getValue(e,t,n){let r=await fetch(this.base_url+this.service+`?table_name=${e}&query_key=${t}&query_value=${n}`),s=await r.json();return s||null}async getLike(e,t){let n=await fetch(this.base_url+this.service+`?query_like=${e}&query_value=${t}`),r=await n.json();return r||null}async post(e,t="gate_pass_system"){let n=await fetch(this.base_url+this.service,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({table_name:t,database_name:"slip_db01",data:e})}),r=await n.json();return r||null}async update(e){e.method="update";let t=await fetch(this.base_url+this.service,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),n=await t.json();return n||null}handleError(e){console.error(err)}}class Info extends Service{constructor(){super("api/")}getLikeName(e){let t=new FormData;return t.append("name",e.toUpperCase()+"%"),this.postQuery("name_service/",{},t)}getInfoData(e,t="user_index"){let n={};return n[t]=e,this.postQuery("info/",{"Content-Type":"application/json"},JSON.stringify(n))}getDepartmentData(e){return this.postQuery("department/",{"Content-Type":"application/json"},JSON.stringify({department_index:e}))}}class UserConfig extends Service{constructor(){super("api/")}getConfig(e="index is not null",t="user_config"){return this.getQueryWithKey("user_config/",t,e)}postConfig(e,t="user_config"){return console.log(t),this.postQuery("user_config/",{"Content-Type":"application/json"},JSON.stringify({table_name:t,data:JSON.stringify(e)}))}updateConfig(e,t,n="user_config"){return this.postQuery("user_config/",{"Content-Type":"application/json"},JSON.stringify({method:"update",table_name:n,condition:t,data:JSON.stringify(e)}))}}class Approve extends Service{constructor(){super("api/")}async create(e){let t=await this.postQuery("approve/",{"Content-Type":"application/json"},JSON.stringify({user_index:e.user_index,type_index:e.type_index,department_index:e.type_index?e.type_index:0,slip_index:e.slip_index?e.slip_index:0})),n=null;return console.log(t.data[0][0]),t.data&&(n=await this.postQuery("approve_flow/",{"Content-Type":"application/json"},JSON.stringify({approve_process_id:t.data[0][0],approve_json:JSON.stringify(e.approve_json)}))),[t,n]}async postApproveAlarm(e){return await this.postQuery("approve_alarm/",{"Content-Type":"application/json"},JSON.stringify({user_index:e.user_index,slip_index:e.slip_index,date_alarm:"now()",section_name:e.section_name,type_index:e.type_index}))}updateProcessFlow(e){return this.getQuery("user_config/",e)}getConfig(e){return this.getQuery("user_config/",e)}getState(e){return this.get("approve_flow/?query_key=approve_process_id&query_value="+e)}updateState(e,t){return this.postQuery("approve_flow/",{"Content-Type":"application/json"},JSON.stringify({method:"update",table_name:"approve_process_flow",condition:t,data:JSON.stringify({approve_status:e})}))}getApproveJson(e){return this.getQuery("user_config/",e)}}class Mail extends Service{constructor(){super("api/")}async send(e,t,n){let r=new FormData;r.append("title",e),r.append("content",t),r.append("email",n);let s=await fetch(this.base_url+this.service+"mail/",{body:r,method:"POST"}),a=await s.json();return a}getMail(e,t){return this.getQuery("info/",`firstname='${e}' and surname='${t}'`)}}class Info extends Service{constructor(){super("api/")}getLikeName(e){let t=new FormData;return t.append("name",e.toUpperCase()+"%"),this.postQuery("name_service/",{},t)}getInfoData(e,t="user_index"){let n={};return n[t]=e,this.postQuery("info/",{"Content-Type":"application/json"},JSON.stringify(n))}getDepartmentData(e){return this.postQuery("department/",{"Content-Type":"application/json"},JSON.stringify({department_index:e}))}}class IO extends Service{constructor(){super("api/")}uploadFile(e){let t=new FormData;return t.append("file",e),this.postQuery("upload/",{},t)}async getFile(e){let t=await fetch(this.base_url+this.service+url+`upload/?image=${e}`);return t}}export const $api={data_info:new Info,user_config:new UserConfig,paperless:new Paperless,approve:new Approve,mail:new Mail,io:new IO};
